communication:
  channel:
    _target_: scripts.communication.Gaussian_Noise_Analogic_Channel
    snr: ${hyperparameters.snr}
  encoder:
    _target_: scripts.communication.Encoder
    output_size: 0.5
    n_layers: 2
    normalize: true
    drop_last_activation: true
  decoder:
    _target_: scripts.communication.Decoder
    n_layers: 2
    normalize: true
    drop_last_activation: false
dataset:
  train:
    _target_: torchvision.datasets.CIFAR100
    train: true
    transform:
      _target_: torchvision.transforms.Compose
      _recursive_: true
      transforms:
      - _target_: torchvision.transforms.RandAugment
        num_ops: 2
        magnitude: 9
      - _target_: torchvision.transforms.ColorJitter
        brightness: 0.4
        contrast: 0.4
        saturation: 0.4
        hue: 0
      - _target_: torchvision.transforms.Resize
        size:
        - 224
        - 224
      - _target_: torchvision.transforms.RandomHorizontalFlip
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.485
        - 0.456
        - 0.406
        std:
        - 0.229
        - 0.224
        - 0.225
    root: ${core.dataset_path}
    download: false
  test:
    _target_: torchvision.datasets.CIFAR100
    train: false
    transform:
      _target_: torchvision.transforms.Compose
      _recursive_: true
      transforms:
      - _target_: torchvision.transforms.Resize
        size:
        - 224
        - 224
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.485
        - 0.456
        - 0.406
        std:
        - 0.229
        - 0.224
        - 0.225
    root: ${core.dataset_path}
    download: false
  name: cifar100
  num_classes: 100
  batch_size: 128
model:
  _target_: timm.create_model
  model_name: deit_tiny_patch16_224.fb_in1k
  pretrained: true
  num_classes: ${dataset.num_classes}
optimizer:
  _target_: torch.optim.Adam
  lr: 0.0001
  eps: 1.0e-08
  weight_decay: 0
method:
  function:
    _target_: scripts.methods.ours_static
    _recursive_: false
  name: ours
  k: ${eval:"${communication.encoder.output_size} * ${method.parameters.batch_compression_rate}
    * ${method.parameters.tokens_compression_rate} * 192 / (225*225*3)"}
  parameters:
    batch_compression_rate: 0.9
    tokens_compression_rate: 0.6
    freeze_probability: 0.5
hyperparameters:
  snr: -10
  split_index: 3
  experiment_name: baselines
  max_communication: 200000000000.0
core:
  dataset_path: ./data
  results_path: ./results
  plots_path: ./plots
